#include <mega8.h>
#include <delay.h>

int counter1 = 0;
int counter2 = 0;
int flag1 = 1;
int flag2 = 0;

char state[2][2][2][2][2][2][2] =
{
		{	{	{	{ { {/*0000000*/'F', /*0000001*/'R'}, {/*0000010*/'R', /*0000011*/'R'}}, { {/*0000100*/'R', /*0000101*/'R'}, {/*0000110*/'R', /*0000111*/'R'}}},
					{ { {/*0001000*/'F', /*0001001*/'F'}, {/*0001010*/'F', /*0001011*/'F'}}, { {/*0001100*/'R', /*0001101*/'R'}, {/*0001110*/'R', /*0001111*/'L'}}}
				},
				{	{ { {/*0010000*/'L', /*0010001*/'L'}, {/*0010010*/'F', /*0010011*/'F'}}, { {/*0010100*/'F', /*0010101*/'F'}, {/*0010110*/'F', /*0010111*/'F'}}},
					{ { {/*0011000*/'L', /*0011001*/'L'}, {/*0011010*/'F', /*0011011*/'F'}}, { {/*0011100*/'F', /*0011101*/'F'}, {/*0011110*/'F', /*0011111*/'L'}}}
				}
			},
			{	{	{ { {/*0100000*/'L', /*0100001*/'L'}, {/*0100010*/'F', /*0100011*/'F'}}, { {/*0100100*/'F', /*0100101*/'F'}, {/*0100110*/'F', /*0100111*/'L'}}},
					{ { {/*0101000*/'F', /*0101001*/'F'}, {/*0101010*/'F', /*0101011*/'F'}}, { {/*0101100*/'F', /*0101101*/'F'}, {/*0101110*/'F', /*0101111*/'L'}}}
				},
				{	{ { {/*0110000*/'L', /*0110001*/'L'}, {/*0110010*/'F', /*0110011*/'R'}}, { {/*0110100*/'F', /*0110101*/'F'}, {/*0110110*/'F', /*0110111*/'F'}}},
					{ { {/*0111000*/'L', /*0111001*/'R'}, {/*0111010*/'F', /*0111011*/'R'}}, { {/*0111100*/'F', /*0111101*/'R'}, {/*0111110*/'F', /*0111111*/'L'}}}
				}
			}
		},
		{	{	{	{ { {/*1000000*/'L', /*1000001*/'F'}, {/*1000010*/'R', /*1000011*/'F'}}, { {/*1000100*/'R', /*1000101*/'F'}, {/*1000110*/'R', /*1000111*/'L'}}},
					{ { {/*1001000*/'F', /*1001001*/'F'}, {/*1001010*/'F', /*1001011*/'F'}}, { {/*1001100*/'R', /*1001101*/'F'}, {/*1001110*/'L', /*1001111*/'L'}}}
				},
				{	{ { {/*1010000*/'L', /*1010001*/'F'}, {/*1010010*/'F', /*1010011*/'F'}}, { {/*1010100*/'F', /*1010101*/'F'}, {/*1010110*/'F', /*1010111*/'F'}}},
					{ { {/*1011000*/'L', /*1011001*/'F'}, {/*1011010*/'F', /*1011011*/'F'}}, { {/*1011100*/'F', /*1011101*/'F'}, {/*1011110*/'L', /*1011111*/'L'}}}
				}
			},
			{	{	{ { {/*1100000*/'L', /*1100001*/'F'}, {/*1100010*/'F', /*1100011*/'F'}}, { {/*1100100*/'F', /*1100101*/'F'}, {/*1100110*/'L', /*1100111*/'L'}}},
					{ { {/*1101000*/'F', /*1101001*/'F'}, {/*1101010*/'F', /*1101011*/'F'}}, { {/*1101100*/'F', /*1101101*/'F'}, {/*1101110*/'L', /*1101111*/'L'}}}
				},
				{	{ { {/*1110000*/'L', /*1110001*/'R'}, {/*1110010*/'R', /*1110011*/'R'}}, { {/*1110100*/'F', /*1110101*/'F'}, {/*1110110*/'F', /*1110111*/'F'}}},
					{ { {/*1111000*/'R', /*1111001*/'R'}, {/*1111010*/'R', /*1111011*/'R'}}, { {/*1111100*/'R', /*1111101*/'R'}, {/*1111110*/'R', /*1111111*/'F'}}}
				}
			}
		}
};

void main(void)
{
	DDRB = 0b00000000;
	PORTB = 0b11111111;

	DDRC = 0b00001111;
	PORTC = 0b00000000;

	while (1)
		{

		if(flag1 == 1)
			{
			if(counter1 < 5000)
				{
				if (PINB == 0b00100000)
					{
					counter1++;
					PORTC = 0b00000001;
					}
				else
					{
					counter1 = 0;
					counter2 = 0;
					flag1 = 1;
					flag2 = 0;
					}
				}
			else
				{
				if(PINB == 0b11111111)
					{
					counter1 = 0;
					counter2 = 0;
                    flag1 = 0;
					flag2 = 1;
					PORTC = 0b00000101;
					delay_ms(300);
					}
				}
			}

		if(flag2 == 1)
			{
			if(counter2 < 5000)
				{
				if (PINB == 0b00100000)
					{
					counter2++;
					PORTC = 0b00000100;
					}
				else
					{
					counter1 = 0;
					counter2 = 0;
					flag1 = 1;
					flag2 = 0;
					}
				}
			else
				{
				PORTC = 0b00000000;
				while(1);
				}
			}

		switch (state[PINB.1][PINB.2][PINB.3][PINB.4][PINB.6][PINB.7][PINB.0])
			{
			case 'F' :
				PORTC = 0b00000101;
				break;
			case 'R' :
				PORTC = 0b00000110;
				break;
			case 'L' :
				PORTC = 0b00001001;
				break;
			case 'S' :
				PORTC = 0b00000000;
			}
		}
}
